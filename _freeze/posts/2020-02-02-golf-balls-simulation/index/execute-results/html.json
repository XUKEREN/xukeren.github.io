{
  "hash": "1bc93da3e69d6d0f63eeaa129534db07",
  "result": {
    "markdown": "---\ntitle: Golf Balls Simulation\ndescription: \"simulation-based hypothesis tests\"\nauthor: \"Keren Xu\"\ndate: '2020-02-02'\ncategories:\n  - notes\n  - R\n---\n\n\n![](./golfball_sim.png)   \n\n\n\n\n\n\n\n## Problem   \n\nAllan Rossman used to live along a golf course and collected the golf balls that landed in his yard. Most of these golf balls had a number on them. Allan tallied the numbers on the first 500 golf balls that landed in his yard one summer.   \n\nSpecifically. he collected the following data:\n137  golf balls numbered 1\n138  golf balls numbered 2\n107  golf balls numbered 3\n104  golf balls numbered 4\n14 \"others\" (Either with a different number, or no number at all. We will ignore these other balls for the purposes of this question.)\n\nQuestion: What is the distribution of these numbers?\nIn particular, are the numbers 1, 2, 3, and 4 equally likely?\n\n## My solutions  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n# How many simulations to run?\nNumberOfSims <- 10000\nNumberofBalls <- 500 - 14\n\nset.seed(123) # set the seed for the random number generator - this makes sure the results are reproducible when we are debugging\n\n# create blank vectors to store values\nvec <- vector()\nvec2 <- vector()\nvec3 <- vector()\nvec4 <- vector()\ntheme_set(theme_minimal())\n```\n:::\n\n\n  \n  \n### Simulation\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# compute maximum frequency for each simlation\nfor (j in 1:NumberOfSims) {\n  for (i in 1:NumberofBalls) {\n    vec[i] <- sample(1:4, 1)\n  }\n  vec2[j] <- max(table(vec))\n}\n\n# compute minimum frequency for each simlation\nfor (j in 1:NumberOfSims) {\n  for (i in 1:NumberofBalls) {\n    vec[i] <- sample(1:4, 1)\n  }\n  vec3[j] <- min(table(vec))\n}\n\n# compute range of frequency for each simlation\nrange <- vec2 - vec3\n\n# compute variance of frequency for each simlation\nfor (j in 1:NumberOfSims) {\n  for (i in 1:NumberofBalls) {\n    vec[i] <- sample(1:4, 1)\n  }\n  vec4[j] <- var(table(vec))\n}\n\n\ndf <- cbind(vec2, vec3, vec4, range) %>% as.data.frame()\n\ncolnames(df) <- c(\"max\", \"min\", \"variance\", \"range\")\n\ndim(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10000     4\n```\n:::\n\n```{.r .cell-code}\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  max min  variance range\n1 136 112  11.66667    24\n2 136 117 268.33333    19\n3 138 116  43.00000    22\n4 133 108  95.00000    25\n5 129 116  73.66667    13\n6 137 111 107.00000    26\n```\n:::\n:::\n\n\n\n### Minimum frequency  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# observed vector\nobs <- c(137, 138, 107, 104)\n\n# calculate test statistics\nmin(obs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 104\n```\n:::\n\n```{.r .cell-code}\n# calculate p-value\na <- df %>%\n  filter(min > min(obs)) %>%\n  nrow()\npvalue <- 1 - a / NumberOfSims\npvalue\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1481\n```\n:::\n\n```{.r .cell-code}\nggplot(aes(x = min), data = df) +\n  geom_histogram(binwidth = 2) +\n  geom_vline(xintercept = min(obs), size = 1.4, color = \"#AFAFFF\") +\n  annotate(\"text\", x = min(obs) - 5, y = 1000, label = \" test statistics = 104 \\n pvalue = 0.1481\", size = 4)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n### Variance  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculate test statistics\nvar(obs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 343\n```\n:::\n\n```{.r .cell-code}\n# calculate p-value\na <- df %>%\n  filter(variance > var(obs)) %>%\n  nrow()\npvalue <- a / NumberOfSims\npvalue\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.0336\n```\n:::\n\n```{.r .cell-code}\n# draw the graph\nggplot(aes(x = variance), data = df) +\n  geom_histogram() +\n  geom_vline(xintercept = var(obs), size = 1.4, color = \"#AFAFFF\") +\n  annotate(\"text\", x = var(obs) + 150, y = 600, label = \" test statistics = 343 \\n pvalue = 0.0336\", size = 4)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n### Range  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculate test statistics\nmax(obs) - min(obs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 34\n```\n:::\n\n```{.r .cell-code}\n# calculate p-value\na <- df %>%\n  filter(range > max(obs) - min(obs)) %>%\n  nrow()\npvalue <- a / NumberOfSims\npvalue\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.0742\n```\n:::\n\n```{.r .cell-code}\n# draw the graph\nggplot(aes(x = range), data = df) +\n  geom_histogram() +\n  geom_vline(xintercept = max(obs) - min(obs), size = 1.4, color = \"#AFAFFF\") +\n  annotate(\"text\", x = max(obs) - min(obs) + 8, y = 600, label = \" test statistics = 34 \\n pvalue = 0.0742\", size = 4)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\nI tried 3 test statistics using simulation-based hypothesis tests.  My null hypothesis here is that the numbers 1, 2, 3, and 4 distribute equally. My alternative hypothesis here is that the numbers 1, 2, 3, and 4 do not distribute equally.  \n\nUsing minimum frequency of ball number among 486 balls as the test statistics, we simulated 10000 times and made a histogram for these 10000 minimum frequency.  Our observed test statistics = 104 and our pvalue = 0.1481. Thus, with the significance level of 0.05, we fail to reject the null hypothesis that the numbers 1, 2, 3, and 4 distribute equally likely.    \n\nUsing variance of the frequency of the numbers 1, 2, 3, and 4 as the test statistics, we simulated 10000 times and made a histogram for these 10000 minimum frequency.  Our observed test statistics = 343 and our pvalue = 0.0336. Thus, with the significance level of 0.05, we reject the null hypothesis and conclude that the numbers 1, 2, 3, and 4 do not distribute equally.    \n\nUsing range of the frequency of the numbers 1, 2, 3, and 4 as the test statistics, we simulated 10000 times and made a histogram for these 10000 minimum frequency.  Our observed test statistics = 34 and our pvalue = 0.0742 Thus, with the significance level of 0.05, we fail to reject the null hypothesis that the numbers 1, 2, 3, and 4 distribute equally.      \n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}